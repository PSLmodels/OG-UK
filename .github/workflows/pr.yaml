name: Pull request
on:
  pull_request:
    branches: [ main ]
jobs:
  check-version:
    name: Check versioning
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Check version number has been properly updated
        run: ".github/is-version-number-acceptable.sh"
  black:
    name: Check formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Black Code Formatter
        uses: lgeiger/black-action@master
        with:
          args: ". -l 79 --check"
  build:
    name: Check that docs build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2 # If you're using actions/checkout@v2 you must set persist-credentials to false in most cases for the deployment to work correctly.
        with:
          persist-credentials: false

      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: oguk-calibrate-dev
          environment-file: environment.yml
          python-version: 3.7
          auto-activate-base: false

      - name: Build # Build Jupyter Book
        shell: bash -l {0}
        run: |
          pip install jupyter-book
          pip install sphinxcontrib-bibtex==1.0.0
          pip install -e .
          cd docs
          jb build ./book
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: [3.7]

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Setup Miniconda using Python ${{ matrix.python-version }}
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: oguk-dev
          environment-file: environment.yml
          python-version: ${{ matrix.python-version }}
          auto-activate-base: false

      - name: Build
        shell: bash -l {0}
        run: |
          pip install -e . --user
          pip install pytest-cov --user
          pip install pytest-pycodestyle --user
      - name: Test
        shell: bash -l {0}
        working-directory: ./
        run: |
          pytest -m 'not full_run and not regression' --cov=./ --cov-report=xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true
          verbose: true